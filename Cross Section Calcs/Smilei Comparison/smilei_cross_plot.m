%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/stephendiiorio/Dropbox/University of Michigan/Thomas Research/PhD_Programs/Cross Section Calcs/Smilei Comparison/cross.txt
%
% Auto-generated by MATLAB on 15-Jun-2020 23:15:09

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 100);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["e06", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "e10", "e05", "e11", "e12", "e13", "e14", "e15", "e16", "e17", "e18", "e19", "e20", "e21", "e22", "e23", "VarName26", "VarName27", "VarName28", "VarName29", "VarName30", "VarName31", "VarName32", "VarName33", "VarName34", "VarName35", "VarName36", "VarName37", "VarName38", "VarName39", "VarName40", "VarName41", "VarName42", "VarName43", "VarName44", "VarName45", "VarName46", "VarName47", "VarName48", "VarName49", "VarName50", "VarName51", "VarName52", "VarName53", "VarName54", "VarName55", "VarName56", "VarName57", "VarName58", "VarName59", "VarName60", "VarName61", "VarName62", "VarName63", "VarName64", "VarName65", "VarName66", "VarName67", "VarName68", "VarName69", "VarName70", "VarName71", "VarName72", "VarName73", "VarName74", "VarName75", "VarName76", "VarName77", "VarName78", "VarName79", "VarName80", "VarName81", "VarName82", "VarName83", "VarName84", "VarName85", "VarName86", "VarName87", "VarName88", "VarName89", "VarName90", "VarName91", "VarName92", "VarName93", "VarName94", "VarName95", "VarName96", "VarName97", "VarName98", "VarName99", "VarName100"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
cross = readtable("/Users/stephendiiorio/Dropbox (University of Michigan)/University of Michigan/Thomas Research/PhD_Programs/Cross Section Calcs/Smilei Comparison/cross.txt", opts);


%% Clear temporary variables
clear opts

%% set up constants
cd ../

c = 299792458;
mec2 = 510998.95;
r_e = 2.8179403262E-15;
eps_0 = 8.8541878128E-12;
e_charge = 1.602176634E-19;
me = 9.1093837015E-31;
n_0 = 2.16e23 * 1e6;
w_p = sqrt(n_0 * e_charge * e_charge / me / eps_0);
toJ = 1 / 6.24e18;

%% define the system
Z = 2c8;
ion_level = 1;

cs = CrossSection;

nocc = cs.GetMaxOccShell(Z, ion_level);

energies = table2array(cross(1,:));% * mec2;
smilei_sig = table2array(cross(2:end,:));% / 1e4;% * (c/w_p)^2 /1e4;
yl = [10^-7 10^-3];

%% calculate my values to compare against
sig = zeros(Z, size(energies,1));

for ii = 1:Z
    for jj = 1:length(energies)
        [s, l, t, S] = cs.CrossSectionCalc_Norm(Z, energies(jj), ii, w_p);
        sig(ii, jj) = s;
    end
end

%% plot the comparison

figure('Position',[221 236 703 546])
set(gca,'FontSize',20)

title('\textbf{Total Cross Section, Neutral Z = 2}', 'Interpreter','latex')

hold on
yyaxis left
loglog(energies, smilei_sig(ion_level,:), 'LineWidth',1.5)
ylabel('\textbf{Smilei $\sigma (c/\omega_r)^2$ (with Smilei atomic values) (m$^2$?)}', 'Interpreter','latex')
xline(0.414, 'LineWidth',1.5)
ax = gca();
ax.XScale = 'log';
ax.YScale = 'log';
ylim(yl)

yyaxis right
loglog(energies, sig(ion_level,:), 'LineWidth',1.5)
ylabel('\textbf{My $\sigma$ (m$^2$)}', 'Interpreter','latex')
ax = gca();
ax.XScale = 'log';
ax.YScale = 'log';
ylim(yl)
hold off

xlabel('\textbf{T (eV)}', 'Interpreter','latex')
set(gca,'FontSize',16)


figure('Position',[440 319 627 479])
semilogx(energies, sig(ion_level,:)./smilei_sig(ion_level,:),'k', 'LineWidth',1.5)
xline(0.414, 'LineWidth',1.5)

title('\textbf{Total Cross Section Ratio, Neutral Z = 13}', 'Interpreter','latex')
ylabel('\textbf{$\sigma / \sigma_{Smilei}$}', 'Interpreter','latex')
xlabel('\textbf{T (eV)}', 'Interpreter','latex')
set(gca,'FontSize',16)